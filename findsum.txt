#SERVER
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>

int main() {
    int sockfd, newsockfd, portno;
    socklen_t clilen;
    char buffer[256];
    struct sockaddr_in serv_addr, cli_addr;

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd < 0) {
        perror("Error opening socket");
        exit(1);
    }

    bzero((char*)&serv_addr, sizeof(serv_addr));
    portno = 12345;

    serv_addr.sin_family = AF_INET;
    serv_addr.sin_addr.s_addr = INADDR_ANY;
    serv_addr.sin_port = htons(portno);

    if (bind(sockfd, (struct sockaddr*)&serv_addr, sizeof(serv_addr)) < 0) {
        perror("Error on binding");
        exit(1);
    }

    listen(sockfd, 5);
    clilen = sizeof(cli_addr);

    newsockfd = accept(sockfd, (struct sockaddr*)&cli_addr, &clilen);
    if (newsockfd < 0) {
        perror("Error on accept");
        exit(1);
    }

    bzero(buffer, 256);

    // Receive the first number from the client
    int num1;
    int n = read(newsockfd, &num1, sizeof(num1));
    if (n < 0) {
        perror("Error reading from socket");
        exit(1);
    }

    // Receive the second number from the client
    int num2;
    n = read(newsockfd, &num2, sizeof(num2));
    if (n < 0) {
        perror("Error reading from socket");
        exit(1);
    }

    // Calculate the sum
    int sum = num1 + num2;

    // Send the sum back to the client
    n = write(newsockfd, &sum, sizeof(sum));
    if (n < 0) {
        perror("Error writing to socket");
        exit(1);
    }

    close(newsockfd);
    close(sockfd);

    return 0;
}


#CLIENT
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>

int main() {
    int sockfd, portno, n;
    struct sockaddr_in serv_addr;
    struct hostent *server;
    int num1, num2, sum;
    
    portno = 12345;

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd < 0) {
        perror("Error opening socket");
        exit(1);
    }

    server = gethostbyname("127.0.0.1");
    if (server == NULL) {
        fprintf(stderr, "Error, no such host\n");
        exit(1);
    }

    bzero((char *)&serv_addr, sizeof(serv_addr));
    serv_addr.sin_family = AF_INET;

    bcopy((char *)server->h_addr, (char *)&serv_addr.sin_addr.s_addr, server->h_length);
    serv_addr.sin_port = htons(portno);

    if (connect(sockfd, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0) {
        perror("Error connecting");
        exit(1);
    }

    // Prompt the user to enter the first number
    printf("Enter the first number: ");
    scanf("%d", &num1);

    // Prompt the user to enter the second number
    printf("Enter the second number: ");
    scanf("%d", &num2);

    // Send the first number to the server
    n = write(sockfd, &num1, sizeof(num1));
    if (n < 0) {
        perror("Error writing to socket");
        exit(1);
    }

    // Send the second number to the server
    n = write(sockfd, &num2, sizeof(num2));
    if (n < 0) {
        perror("Error writing to socket");
        exit(1);
    }

    // Receive the sum from the server
    n = read(sockfd, &sum, sizeof(sum));
    if (n < 0) {
        perror("Error reading from socket");
        exit(1);
    }

    printf("Sum received from server: %d\n", sum);

    close(sockfd);

    return 0;
}
